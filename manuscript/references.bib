@Article{Baruzzo2016,
author={Baruzzo, Giacomo
and Hayer, Katharina E.
and Kim, Eun Ji
and Di Camillo, Barbara
and FitzGerald, Garret A.
and Grant, Gregory R.},
title={Simulation-based comprehensive benchmarking of {RNA-Seq} aligners},
journal={Nature Methods},
year={2016},
month={Dec},
day={12},
volume={14},
pages={135 EP  -},
url={http://dx.doi.org/10.1038/nmeth.4106}
}

@article{Brinda2015,
    author = {BÅ™inda, Karel and Boeva, Valentina and Kucherov, Gregory},
    title = "{RNF: a general framework to evaluate NGS read mappers}",
    journal = {Bioinformatics},
    volume = {32},
    number = {1},
    pages = {136-139},
    year = {2015},
    month = {09},
    abstract = "{Motivation: Read simulators combined with alignment evaluation tools provide the most straightforward way to evaluate and compare mappers. Simulation of reads is accompanied by information about their positions in the source genome. This information is then used to evaluate alignments produced by the mapper. Finally, reports containing statistics of successful read alignments are created. In default of standards for encoding read origins, every evaluation tool has to be made explicitly compatible with the simulator used to generate reads.Results: To solve this obstacle, we have created a generic format Read Naming Format (R nf ) for assigning read names with encoded information about original positions. Futhermore, we have developed an associated software package R nf Tools containing two principal components. MIS hmash applies one of popular read simulating tools (among D wg S im , A rt , M ason , C u R e S im , etc.) and transforms the generated reads into R nf format. LAVE nder evaluates then a given read mapper using simulated reads in R nf format. A special attention is payed to mapping qualities that serve for parametrization of R oc curves, and to evaluation of the effect of read sample contamination. Availability and implementation:  R nf Tools: http://karel-brinda.github.io/rnftools Spec. of R nf : http://karel-brinda.github.io/rnf-specContact:karel.brinda@univ-mlv.fr}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btv524},
    url = {https://dx.doi.org/10.1093/bioinformatics/btv524},
    eprint = {http://oup.prod.sis.lan/bioinformatics/article-pdf/32/1/136/6686980/btv524.pdf},
}



@Article{DiTommaso2017,
author={Di Tommaso, Paolo
and Chatzou, Maria
and Floden, Evan W.
and Barja, Pablo Prieto
and Palumbo, Emilio
and Notredame, Cedric},
title={Nextflow enables reproducible computational workflows},
journal={Nature Biotechnology},
year={2017},
month={Apr},
day={11},
publisher={Nature Publishing Group, a division of Macmillan Publishers Limited. All Rights Reserved. SN  -},
volume={35},
pages={316 EP  -},
url={http://dx.doi.org/10.1038/nbt.3820}
}

@article{Grant2011,
author = {Grant, Gregory R. and Farkas, Michael H. and Pizarro, Angel D. and Lahens, Nicholas F. and Schug, Jonathan and Brunk, Brian P. and Stoeckert, Christian J. and Hogenesch, John B. and Pierce, Eric A.},
title = {Comparative analysis of {RNA-Seq} alignment algorithms and the RNA-Seq unified mapper ({RUM})},
journal = {Bioinformatics},
volume = {27},
number = {18},
pages = {2518-2528},
year = {2011},
doi = {10.1093/bioinformatics/btr427},
URL = {http://dx.doi.org/10.1093/bioinformatics/btr427},
eprint = {/oup/backfile/content_public/journal/bioinformatics/27/18/10.1093_bioinformatics_btr427/2/btr427.pdf}
}

@Article{Kim2015,
  author={Kim, Daehwan and Langmead, Ben and Salzberg, Steven L.},
  title={HISAT: a fast spliced aligner with low memory requirements},
  journal={Nature Methods},
  year={2015},
  month={Mar},
  day={09},
  volume={12},
  pages={357 EP  -},
  note={Article},
  url={http://dx.doi.org/10.1038/nmeth.3317}
}

@article{Kurtzer2017,
    author = {Kurtzer, Gregory M. AND Sochat, Vanessa AND Bauer, Michael W.},
    journal = {PLOS ONE},
    publisher = {Public Library of Science},
    title = {Singularity: Scientific containers for mobility of compute},
    year = {2017},
    month = {05},
    volume = {12},
    url = {https://doi.org/10.1371/journal.pone.0177459},
    pages = {1-20},
    abstract = {Here we present Singularity, software developed to bring containers and reproducibility to scientific computing. Using Singularity containers, developers can work in reproducible environments of their choosing and design, and these complete environments can easily be copied and executed on other platforms. Singularity is an open source initiative that harnesses the expertise of system and software engineers and researchers alike, and integrates seamlessly into common workflows for both of these groups. As its primary use case, Singularity brings mobility of computing to both users and HPC centers, providing a secure means to capture and distribute software and compute environments. This ability to create and deploy reproducible environments across these centers, a previously unmet need, makes Singularity a game changing development for computational science.},
    number = {5},
    doi = {10.1371/journal.pone.0177459}
}