// manifest {
//   homePage = 'https://github.com/csiro-crop-informatics/biokanga-manuscript'
//   description = 'Pipeline for executing experiments underpinnig biokanga publication'
//   defaultBranch = 'master'
// }


// // Global default params, used in configs
params {
//   version = '0.3' //Pipeline version
  outdir = "./results"
  publishmode = "copy"
  replicates = 3 //min 1 max 3
  debug = false
  debugChromosome = 'chr21'
  debugDataset = 'human_t2r1'
  adapters = false
  // email = '' //multiple comma spearated allowed - just use -with-notification
}
//Output publishing conf
includeConfig 'conf/publish.config'

process {
  cache = 'lenient'
}


profiles {
  docker {
      docker {
      enabled = true
      fixOwnership = true
    }
    includeConfig 'conf/containers.config'
  }
  slurm {
    process {
      executor = 'slurm'
      scratch = true
    }
    includeConfig 'conf/requirements.config'
  }
  singularity {
    singularity {
      enabled = true
      autoMounts = true
      cacheDir = "${HOME}/singularity-images"
    }
    includeConfig 'conf/containers.config'
  }
  singularitymodule {
    process.module = 'singularity/2.5.0' //Specific to our cluster - updated as required
  }

}

//GENERATE REPORT https://www.nextflow.io/docs/latest/tracing.html#trace-report
report {
    enabled = true
    file = "${params.outdir}/flowinfo/report.html"
}

//GENERATE TIMELINE https://www.nextflow.io/docs/latest/tracing.html#timeline-report
timeline {
    enabled = true
    timeline.file = "${params.outdir}/flowinfo/timeline.html"
}

//GENERATE PIPELINE TRACE https://www.nextflow.io/docs/latest/tracing.html#trace-report
trace {
    enabled = true
    raw	= true //date and time are reported as milliseconds and memory as number of bytes
    file = "${params.outdir}/flowinfo/trace.tsv"
}

// //SEND NOTIFICATION EMAIL IF ADDRESS(ES) PROVIDED -- use -N email@.... instead
// notification {
//   enabled = params.email.isEmpty() ? false : true
//   to = params.email
// }

//FROM: https://github.com/SciLifeLab/NGI-smRNAseq/blob/29c41afd45011874ed9920c5065ddff93791e3cf/nextflow.config
// Function to ensure that resource requirements don't go beyond a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    if(obj.compareTo(params.max_memory) == 1)
      return params.max_memory
    else
      return obj
  } else if(type == 'time'){
    if(obj.compareTo(params.max_time) == 1)
      return params.max_time
    else
      return obj
  } else if(type == 'cpus'){
    return Math.min( obj, params.max_cpus )
  }
}


